@model Triad.CabinetOffice.Slipping.Web.ViewModels.DateAndTime
@using Triad.CabinetOffice.Slipping.Web.Extensions
@using Triad.CabinetOffice.Slipping.Data.Extensions

@{
    ViewBag.Title = (ViewData.ModelState.IsValid ? "" : "Error: ") + "When will you be going?";
}

<div class="grid-row">
    <div class="column-two-thirds column-minimum">
        @Html.BackLink("Index", null, "link-back")

        @Html.Partial("_ValidationSummary")

        <h1 class="heading-large">
            When do you want your slip to start?
        </h1>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-group @Html.ValidationErrorClassFor(model => model.Date, "form-group-error") ">
                @Html.LabelFor(model => model.Date, new { @class = "form-label" })
                <span class="form-hint">for example: 15/12/@DateTime.Now.Year</span>
                <span class="error-message">@Html.ValidationMessageFor(model => model.Date)</span>
                @if (Request.Browser.Browser == "IE" || Request.Browser.Browser == "InternetExplorer" || Request.Browser.Browser == "Firefox")
                {
                    @Html.TextBoxWithErrorClassFor(model => model.Date, new { @class = "form-control", @type = "text", @Value = Model.Date.ToShortDateString() }, "form-control-error")
                }
                else
                {
                    @Html.TextBoxWithErrorClassFor(model => model.Date, new { @class = "form-control", @type = "date", @Value = Model.Date.ToString("yyyy-MM-dd"), @min = DateTime.UtcNow.ToUkTimeFromUtc().ToString("yyyy-MM-dd") }, "form-control-error")
                }
            </div>

            <div class="form-group @Html.ValidationErrorClassFor(model => model.Hour, "form-group-error")">
                <label class="form-label" style="margin-bottom:10px;">What time will you be going?</label>
                @Html.LabelFor(model => model.Hour, new { @class = "form-label" })
                <span class="error-message">@Html.ValidationMessageFor(model => model.Hour)</span>
                @Html.DropDownListWithErrorClassFor(model => model.Hour, Model.Hours, new { @class = "form-control" }, "form-control-error")
                <br />
                <br />
                @Html.LabelFor(model => model.Minute, "Minutes", new { @class = "form-label" })
                @Html.DropDownListWithErrorClassFor(model => model.Minute, Model.Minutes, new { @class = "form-control" }, "form-control-error")
            </div>

            <div class="form-group">
                <input class="button" type="submit" value="Continue" />
            </div>
        }
    </div>
</div>
